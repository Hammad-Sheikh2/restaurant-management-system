[{"D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\index.js":"1","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\App.js":"2","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\reportWebVitals.js":"3","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\MainPage.js":"4","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\Order.js":"5","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\Menu.js":"6","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\Reports.js":"7","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\AddItemInMenu.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":17617,"mtime":1624191724525,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2252,"mtime":1611070015033,"results":"13","hashOfConfig":"10"},{"size":16732,"mtime":1610908344283,"results":"14","hashOfConfig":"10"},{"size":3704,"mtime":1611049663675,"results":"15","hashOfConfig":"10"},{"size":7003,"mtime":1611079207474,"results":"16","hashOfConfig":"10"},{"size":4962,"mtime":1624201650838,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"k4mluc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\index.js",[],["38","39"],"D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\App.js",["40","41","42","43","44","45","46","47"],"D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\reportWebVitals.js",[],"D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\MainPage.js",[],"D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\Order.js",["48","49","50","51","52","53","54","55","56","57","58","59"],"import React, { useEffect, useState } from 'react'  \r\n  \r\nfunction Order(Props) {   \r\n    let [filterCategories,setFilterCategories]=useState(Props.categories);\r\n    let [selectedCategory,setSelectedCategory]=useState(\"All\");\r\n    let [selectedOrder,setSelectedOrder] = useState([]);\r\n    let [totalPrice,setTotalPrice]=useState(0);\r\n    let calculateTotalPrice=()=>{\r\n        let sum=0;\r\n        if( selectedOrder.length!=0)\r\n        {\r\n            selectedOrder.map(item=>{\r\n                sum+=item[2];\r\n            });\r\n        }\r\n        setTotalPrice(sum);\r\n    }\r\n    useEffect(() => {\r\n\r\n    }) ;\r\n\r\n    return (  \r\n        <div>\r\n            <div class=\"jumbotron text-center m-5\" style={{borderRadius:'20px'}}>\r\n                <h1 className=\"subheading\">Add Order</h1> \r\n            </div>\r\n            <div className=\"row container-fluid mt-3\" >  \r\n                <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n                    <div className=\"input-group\">\r\n                        <input className=\"form-control\"  type=\"text\" onChange={(e)=>{\r\n                            let temp=[];\r\n                            for(let i=0; i<Props.categories.length; i++)\r\n                            {\r\n                                if(Props.categories[i].toUpperCase().indexOf(e.target.value.toUpperCase())!=-1)\r\n                                {\r\n                                    temp.push(Props.categories[i]);\r\n                                }\r\n                            }\r\n                            setFilterCategories(temp);\r\n                        }}></input>\r\n                    </div>\r\n                    <div className=\"ml-3 mt-3\" style={{ textAlign:'left',height: '480px', overflowY: 'scroll'}}>\r\n                        <div style={{cursor:'pointer'}} onClick={()=>{\r\n                            setFilterCategories(Props.categories)\r\n                            setSelectedCategory(\"All\")\r\n                        }}>\r\n                            <p><b>All Categories</b></p>\r\n                        </div>\r\n                        {filterCategories.map((item=>{\r\n                            return(\r\n                                <div style={{cursor:'pointer'}} onClick={()=>{\r\n                                    let temp=[];\r\n                                    temp.push(item);\r\n                                    setFilterCategories(temp)\r\n                                    setSelectedCategory(item)\r\n                                }}>\r\n                                    <p><b>{item}</b></p>\r\n                                </div>\r\n                            )\r\n                        }))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-sm-8 col-md-9 col-lg-9\">\r\n                    <div className=\"row mt-3 \" style={{ textAlign:'left',height: '450px',overflowY: 'scroll'}}>\r\n                        {\r\n                            selectedCategory===\"All\"?(\r\n                                Props.menu.map((item)=>{\r\n                                    return(\r\n                                        <div className=\"col-md-3 col-sm-6\">\r\n                                            <div class=\"card\" onClick={()=>{\r\n                                                let isFound=false;\r\n                                                for(let i = 0; i < selectedOrder.length; i++)\r\n                                                {\r\n                                                    if(selectedOrder[i][0]===item.item)\r\n                                                    {\r\n                                                        let tempSelectedOrder=selectedOrder;\r\n                                                        tempSelectedOrder[i][1]++;\r\n                                                        tempSelectedOrder[i][2]=item.price*selectedOrder[i][1];\r\n                                                        setSelectedOrder(tempSelectedOrder);\r\n                                                        i=selectedOrder.length;\r\n                                                        isFound=true;\r\n                                                    }\r\n                                                }\r\n                                                if(isFound==false)\r\n                                                {\r\n                                                    let tempSelectedOrder=selectedOrder;\r\n                                                    let temp = [ \"\", 1, 0];\r\n                                                    temp[0]=item.item;\r\n                                                    temp[2]=item.price;\r\n                                                    tempSelectedOrder.push(temp);\r\n                                                    setSelectedOrder(tempSelectedOrder);\r\n                                                }\r\n                                                calculateTotalPrice();  \r\n                                            }}>\r\n                                                <img class=\"card-img-top\" src={item.image} style={{height:'150px'}} alt=\"Card image\"></img>\r\n                                                <div class=\"card-body\">\r\n                                                    <h5 class=\"card-title\">{item.item}</h5>\r\n                                                    <p class=\"card-text\">{item.price}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )  \r\n                                })\r\n                            ):(\r\n                                Props.menu.map((item)=>{\r\n                                    return(\r\n                                        item.category===selectedCategory?(\r\n                                            <div className=\"col-md-3 col-sm-6\">\r\n                                                <div class=\"card\" onClick={()=>{\r\n                                                    let isFound=false;\r\n                                                    for(let i = 0; i < selectedOrder.length; i++)\r\n                                                    {\r\n                                                        if(selectedOrder[i][0]===item.item)\r\n                                                        {\r\n                                                            let tempSelectedOrder=selectedOrder;\r\n                                                            tempSelectedOrder[i][1]++;\r\n                                                            tempSelectedOrder[i][2]=item.price*selectedOrder[i][1];\r\n                                                            setSelectedOrder(tempSelectedOrder);\r\n                                                            i=selectedOrder.length;\r\n                                                            isFound=true;\r\n                                                        }\r\n                                                    }\r\n                                                    if(isFound==false)\r\n                                                    {\r\n                                                        let tempSelectedOrder=selectedOrder;\r\n                                                        let temp = [ \"\", 1, 0];\r\n                                                        temp[0]=item.item;\r\n                                                        temp[2]=item.price;\r\n                                                        tempSelectedOrder.push(temp);\r\n                                                        setSelectedOrder(tempSelectedOrder);\r\n                                                    }\r\n                                                    calculateTotalPrice();\r\n                                                }}>\r\n                                                    <img class=\"card-img-top\" src={item.image} style={{height:'150px'}} alt=\"Card image\"></img>\r\n                                                    <div class=\"card-body\">\r\n                                                        <h5 class=\"card-title\">{item.item}</h5>\r\n                                                        <p class=\"card-text\">{item.price}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ):(<React.Fragment></React.Fragment>)\r\n                                    )\r\n                                })\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-sm-12 col-md-12 col-lg-12\" style={{ textAlign:'left',height: '500px', overflow: 'hidden'}}>\r\n                    <div className=\"bg-dark mt-1\" style={{textAlign:'center',marginBottom:'0px',paddingBottom:'0px'}}>\r\n                        <h1 className=\"subheading\">Bill</h1>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table class=\"table\" style={{marginTop:'0px',paddingTop:'0px'}}>\r\n                            <thead>\r\n                                <tr className=\"table-success\">\r\n                                    <th>Name</th>\r\n                                    <th>Qty</th>\r\n                                    <th>Price</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"table-responsive\" style={{overflowY: 'scroll',height: '310px'}}>\r\n                        <table class=\"table\">\r\n                            <tbody>\r\n                                {   \r\n                                    selectedOrder.length!=0?(\r\n                                        selectedOrder.map((item)=>{\r\n                                            return(\r\n                                                <tr> \r\n                                                    <th>{item[0]}</th>\r\n                                                    <th><button className=\"btn btn-outline-danger\" onClick={()=>{\r\n                                                        if(item[1]>1)\r\n                                                        {\r\n                                                            item[1]--;\r\n                                                            for(let i=0; i<Props.menu.length; i++)\r\n                                                            {\r\n                                                                if(Props.menu[i].item==item[0])\r\n                                                                {\r\n                                                                    item[2]=Props.menu[i].price*item[1];\r\n                                                                    i=Props.menu.length;\r\n                                                                }\r\n                                                            }\r\n                                                            calculateTotalPrice();\r\n                                                        }\r\n                                                    }}>-</button> {item[1]} <button className=\"btn btn-outline-success\" onClick={()=>{\r\n                                                            item[1]++;\r\n                                                            for(let i=0; i<Props.menu.length; i++)\r\n                                                            {\r\n                                                                if(Props.menu[i].item==item[0])\r\n                                                                {\r\n                                                                    item[2]=Props.menu[i].price*item[1];\r\n                                                                    i=Props.menu.length;\r\n                                                                }\r\n                                                            }\r\n                                                            calculateTotalPrice();\r\n                                                    }}>+</button></th>\r\n                                                    <th>{item[2]}</th>\r\n                                                    <th style={{cursor:'pointer',color:'red'}} onClick={()=>{\r\n                                                        selectedOrder.splice(selectedOrder.indexOf(item),1);\r\n                                                        calculateTotalPrice();\r\n                                                    }}><i class=\"far fa-times-circle\"></i></th>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    ):(<React.Fragment></React.Fragment>) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"sticky-bottom bg-warning subheading display-4\">\r\n                        Total : {totalPrice}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-3\">\r\n                    <button className=\"p-3 btn btn-danger btn-block\" data-toggle=\"modal\" data-target=\"#myModal\" onClick={()=>{\r\n                        let temp=[];\r\n                        temp.push(selectedOrder);\r\n                        temp.push(totalPrice);\r\n                        Props.billsList.push(temp);\r\n                        let tbody=\"\";\r\n                        selectedOrder.map((item)=>{\r\n                            let row=\"<tr>\";\r\n                            row+=\"<td>\"+item[0]+\"</td>\";\r\n                            row+=\"<td>\"+item[1]+\"</td>\";\r\n                            row+=\"<td>\"+item[2]+\"</td>\";\r\n                            row+=\"</tr>\";\r\n                            tbody+=row;\r\n                        })\r\n                        document.getElementById(\"billItems\").innerHTML=tbody;\r\n                        setSelectedOrder([]);\r\n                        setTotalPrice(0);\r\n\r\n                    }}>Submit Order</button>\r\n                </div>\r\n                <div className=\"col-12 mt-3\">\r\n                    <button className=\"p-3 btn btn-dark btn-block\" onClick={()=>{\r\n                        let temp=[];\r\n                        temp.push(selectedOrder);\r\n                        temp.push(totalPrice);\r\n                        Props.billsList.push(temp);\r\n                        setSelectedOrder([]);\r\n                        setTotalPrice(0);\r\n                    }}>Print Bill</button>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            <div class=\"modal\" id=\"myModal\">\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n                    \r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title subheading\">Order Submitted</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n                        \r\n                        <div class=\"modal-body\" style={{fontFamily:'sans-serif'}}>\r\n                            Order ID is {Props.billsList.length-1}\r\n                            <div className=\"table\" style={{textAlign:'left'}}>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr className=\"table-danger\">\r\n                                            <th>Name</th>\r\n                                            <th>Qty</th>\r\n                                            <th>Price</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"billItems\">\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <p className=\"subheading display-4\">Total {Props.billsList.length==0?0:Props.billsList[Props.billsList.length-1][1]}</p>\r\n                        </div>\r\n                        \r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n          \r\n    )  \r\n}  \r\n  \r\nexport default Order","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\Menu.js",["60","61","62"],"import React, { useState } from \"react\";\r\nimport AddItemInMenu from \"./AddItemInMenu\";\r\nimport \"./App.css\";\r\nfunction Menu (props)\r\n{\r\n    let a =false;\r\n    let [isButtonClick,setIsButtonClick]=useState(false);\r\n    let setButtonClickOnOFF =()=>{\r\n        if(a==false)\r\n        {\r\n            a=true;\r\n            setIsButtonClick(true);\r\n        }\r\n        else\r\n        {\r\n            a=false;\r\n            setIsButtonClick(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-5\">\r\n            <h1 className=\"display-1 subheading\">Menu</h1>\r\n                {\r\n                    props.categories.map( (item)=>{\r\n                        let i=0;\r\n                        return (\r\n                            <div className=\"container\">\r\n                                <div class=\"jumbotron text-center\" style={{marginBottom:'0'}}>\r\n                                    <h1>{item}</h1> \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        props.menu.map((item1)=>{\r\n                                            i++;\r\n                                            return ( item1.category===item?(\r\n                                                <div class=\"col-md-6 col-lg-4 \">\r\n                                                    <div class=\"card m-3\" style={{width: '18rem'}}>\r\n                                                        <img class=\"card-img-top\" style={{height:'430px'}} src={process.env.PUBLIC_URL + item1.image} alt=\"Card image cap\"></img>\r\n                                                        <div class=\"card-body\" style={{textAlign:'left'}}>\r\n                                                            <h5 class=\"card-title\">{item1.item}</h5>\r\n                                                            <h5 class=\"card-title text-danger\">{item1.price} RS</h5>\r\n                                                            <p class=\"card-text\">{item1.description}</p>\r\n                                                            <ul class=\"ftco-social d-flex\">\r\n                                                                <li className=\" mx-4\" style={{color:'red'}}>{item1.likes}  <i class=\"far fa-grin-hearts\"></i></li>\r\n                                                                <li className=\" mx-4\" style={{color:'black'}} >{item1.dislikes}  <i class=\"far fa-thumbs-down\"></i></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ):(<React.Fragment></React.Fragment>))\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }   \r\n            <div>\r\n                <div className=\"container\">\r\n                    <div class=\"jumbotron text-center\" style={{marginBottom:'0'}}>\r\n                        <h1 className=\"subheading display-1\">Add Item</h1> \r\n                        <button className=\"btn btn-outline-danger px-5\" onClick={()=>{setButtonClickOnOFF()}}>Add</button>\r\n                        {isButtonClick==false?(<React.Fragment></React.Fragment>):(<AddItemInMenu setMenu={props.setHotelMenu}  menu={props.menu} category={props.categories}></AddItemInMenu>)}\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n            \r\n        </div> \r\n    )\r\n}\r\nexport default Menu;","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\Reports.js",["63","64","65","66","67","68","69","70","71","72","73"],"import React from \"react\";\r\nimport Chart from \"chart.js\"\r\nlet colors= (num)=>{\r\n    if(num%7==0)\r\n    {\r\n        return \"rgb(255, 255, 4)\";\r\n    }\r\n    if(num%6==0)\r\n    {\r\n        return \" rgb(255, 94, 0)\";\r\n    }\r\n    if(num%5==0)\r\n    {\r\n        return \"rgb(255, 0, 0)\";\r\n    }\r\n    if(num%4==0)\r\n    {\r\n        return \"rgb(76, 0, 255)\";\r\n    }\r\n    if(num%3==0)\r\n    {\r\n        return \"rgb(255, 0, 179)\";\r\n    }\r\n    if(num%2==0)\r\n    {\r\n        return \"rgb(0, 255, 42)\";\r\n    }\r\n    if(num%1==0)\r\n    {\r\n        return \"rgb(255, 0, 55)\";\r\n    }\r\n}\r\n\r\nfunction Reports (Props) {\r\n    let graph = () => {\r\n        console.log(\"Graph\");\r\n        let myChart = document.getElementById('myChart').getContext('2d');\r\n        // Global Options\r\n        Chart.defaults.global.defaultFontFamily = 'Lato';\r\n        Chart.defaults.global.defaultFontSize = 18;\r\n        Chart.defaults.global.defaultFontColor = '#777';\r\n    \r\n        let massPopChart = new Chart(myChart, {\r\n        type:'doughnut', // bar, horizontalBar, pie, line, doughnut, radar, polarArea\r\n        data:{\r\n            labels:[],\r\n            datasets:[{\r\n            label:'Item Count',\r\n            data:[],\r\n            //backgroundColor:'green',\r\n            backgroundColor:[],\r\n            borderWidth:1,\r\n            borderColor:'#777',\r\n            hoverBorderWidth:3,\r\n            hoverBorderColor:'#000'\r\n            }]\r\n        },\r\n        options:{\r\n            title:{\r\n            display:true,\r\n            text:'Category Items Count',\r\n            fontSize:25\r\n            },\r\n            legend:{\r\n            display:true,\r\n            position:'bottom',\r\n            labels:{\r\n                fontColor:'#000'\r\n            }\r\n            },\r\n            layout:{\r\n            padding:{\r\n                left:50,\r\n                right:0,\r\n                bottom:0,\r\n                top:0\r\n            }\r\n            },\r\n            tooltips:{\r\n            enabled:true\r\n            }\r\n        }\r\n        });\r\n        let i=6;\r\n        Props.categories.map((item)=>{\r\n            massPopChart.data.labels.push(item);\r\n            let count=0;\r\n            Props.menu.map((item1)=>{\r\n                if(item1.category===item)\r\n                {\r\n                    count++\r\n                }\r\n            })\r\n            massPopChart.data.datasets[0].data.push(count);\r\n            massPopChart.data.datasets[0].backgroundColor.push(colors(i));\r\n            i++;\r\n        })\r\n        var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        if(isMobile)\r\n        {\r\n            massPopChart.options.legend.display=false;\r\n        }\r\n    }\r\n    let graph1 = () => {\r\n        console.log(\"Graph1\");\r\n        let myChart = document.getElementById('myChart1').getContext('2d');\r\n        // Global Options\r\n        Chart.defaults.global.defaultFontFamily = 'Lato';\r\n        Chart.defaults.global.defaultFontSize = 18;\r\n        Chart.defaults.global.defaultFontColor = '#777';\r\n    \r\n        let massPopChart = new Chart(myChart, {\r\n        type:'pie', // bar, horizontalBar, pie, line, doughnut, radar, polarArea\r\n        data:{\r\n            labels:[],\r\n            datasets:[{\r\n            label:'Population',\r\n            data:[],\r\n            //backgroundColor:'green',\r\n            backgroundColor:[],\r\n            borderWidth:1,\r\n            borderColor:'#777',\r\n            hoverBorderWidth:3,\r\n            hoverBorderColor:'#000'\r\n            }]\r\n        },\r\n        options:{\r\n            title:{\r\n            display:true,\r\n            text:'Popular Items',\r\n            fontSize:25\r\n            },\r\n            legend:{\r\n            display:true,\r\n            position:\"bottom\",\r\n            labels:{\r\n                fontColor:'#000'\r\n            }\r\n            },\r\n            layout:{\r\n            padding:{\r\n                left:50,\r\n                right:0,\r\n                bottom:0,\r\n                top:0\r\n            }\r\n            },\r\n            tooltips:{\r\n            enabled:true\r\n            }\r\n        }\r\n        });\r\n        let i=5;\r\n        Props.menu.map((item)=>{\r\n            massPopChart.data.labels.push(item.item);\r\n            massPopChart.data.datasets[0].data.push(item.likes);\r\n            massPopChart.data.datasets[0].backgroundColor.push(colors(i));\r\n            i++;\r\n        })\r\n        var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        if(isMobile)\r\n        {\r\n            massPopChart.options.legend.display=false;\r\n        }\r\n        //\r\n    }\r\n    let graph2 = () => {\r\n        console.log(\"Graph2\");\r\n        let myChart = document.getElementById('myChart2').getContext('2d');\r\n        // Global Options\r\n        Chart.defaults.global.defaultFontFamily = 'Lato';\r\n        Chart.defaults.global.defaultFontSize = 18;\r\n        Chart.defaults.global.defaultFontColor = '#777';\r\n    \r\n        let massPopChart = new Chart(myChart, {\r\n        type:'bar', // bar, horizontalBar, pie, line, doughnut, radar, polarArea\r\n        data:{\r\n            labels:[],\r\n            datasets:[{\r\n            label:'Dislikes',\r\n            data:[],\r\n            //backgroundColor:'green',\r\n            backgroundColor:[],\r\n            borderWidth:2,\r\n            borderColor:'#777',\r\n            hoverBorderWidth:2,\r\n            hoverBorderColor:'#000'\r\n            }]\r\n        },\r\n        options:{\r\n            title:{\r\n            display:true,\r\n            text:'Disliked Items',\r\n            fontSize:25\r\n            },\r\n            legend:{\r\n            display:false,\r\n            position:\"bottom\",\r\n            labels:{\r\n                fontColor:'#000'\r\n            }\r\n            },\r\n            layout:{\r\n            padding:{\r\n                left:50,\r\n                right:0,\r\n                bottom:0,\r\n                top:0\r\n            }\r\n            },\r\n            tooltips:{\r\n            enabled:true\r\n            }\r\n        }\r\n        });\r\n        let i=1;\r\n        Props.menu.map((item)=>{\r\n            massPopChart.data.labels.push(item.item);\r\n            massPopChart.data.datasets[0].data.push(item.dislikes);\r\n            massPopChart.data.datasets[0].backgroundColor.push(colors(i));\r\n            i++;\r\n        })\r\n        var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        if(isMobile)\r\n        {\r\n            massPopChart.options.legend.display=false;\r\n        }\r\n    }\r\n    \r\n    setTimeout(graph,200);\r\n    setTimeout(graph1,200);\r\n    setTimeout(graph2,200);\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <canvas id=\"myChart\"></canvas>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <canvas id=\"myChart1\"></canvas>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <canvas id=\"myChart2\"></canvas>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Reports;","D:\\hamma\\Documents\\website\\websites\\restaurant-app\\src\\AddItemInMenu.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":146,"column":93,"nodeType":"80","endLine":146,"endColumn":114},{"ruleId":"81","severity":1,"message":"82","line":282,"column":19,"nodeType":"83","endLine":282,"endColumn":112},{"ruleId":"81","severity":1,"message":"82","line":283,"column":19,"nodeType":"83","endLine":283,"endColumn":112},{"ruleId":"81","severity":1,"message":"82","line":284,"column":19,"nodeType":"83","endLine":284,"endColumn":112},{"ruleId":"81","severity":1,"message":"82","line":287,"column":19,"nodeType":"83","endLine":287,"endColumn":112},{"ruleId":"81","severity":1,"message":"82","line":288,"column":19,"nodeType":"83","endLine":288,"endColumn":112},{"ruleId":"81","severity":1,"message":"82","line":289,"column":19,"nodeType":"83","endLine":289,"endColumn":112},{"ruleId":"84","severity":1,"message":"85","line":309,"column":194,"nodeType":"83","endLine":309,"endColumn":245},{"ruleId":"86","severity":1,"message":"87","line":10,"column":33,"nodeType":"88","messageId":"89","endLine":10,"endColumn":35},{"ruleId":"90","severity":1,"message":"91","line":12,"column":35,"nodeType":"92","messageId":"93","endLine":12,"endColumn":37},{"ruleId":"86","severity":1,"message":"87","line":34,"column":107,"nodeType":"88","messageId":"89","endLine":34,"endColumn":109},{"ruleId":"86","severity":1,"message":"94","line":86,"column":59,"nodeType":"88","messageId":"89","endLine":86,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":97,"column":49,"nodeType":"83","endLine":97,"endColumn":134},{"ruleId":"86","severity":1,"message":"94","line":125,"column":63,"nodeType":"88","messageId":"89","endLine":125,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":136,"column":53,"nodeType":"83","endLine":136,"endColumn":138},{"ruleId":"86","severity":1,"message":"87","line":172,"column":57,"nodeType":"88","messageId":"89","endLine":172,"endColumn":59},{"ruleId":"86","severity":1,"message":"94","line":183,"column":86,"nodeType":"88","messageId":"89","endLine":183,"endColumn":88},{"ruleId":"86","severity":1,"message":"94","line":195,"column":86,"nodeType":"88","messageId":"89","endLine":195,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":227,"column":49,"nodeType":"92","messageId":"93","endLine":227,"endColumn":51},{"ruleId":"86","severity":1,"message":"94","line":281,"column":94,"nodeType":"88","messageId":"89","endLine":281,"endColumn":96},{"ruleId":"86","severity":1,"message":"94","line":9,"column":13,"nodeType":"88","messageId":"89","endLine":9,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":39,"column":57,"nodeType":"83","endLine":39,"endColumn":172},{"ruleId":"86","severity":1,"message":"94","line":64,"column":39,"nodeType":"88","messageId":"89","endLine":64,"endColumn":41},{"ruleId":"86","severity":1,"message":"94","line":4,"column":13,"nodeType":"88","messageId":"89","endLine":4,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":8,"column":13,"nodeType":"88","messageId":"89","endLine":8,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":12,"column":13,"nodeType":"88","messageId":"89","endLine":12,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":16,"column":13,"nodeType":"88","messageId":"89","endLine":16,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":20,"column":13,"nodeType":"88","messageId":"89","endLine":20,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":24,"column":13,"nodeType":"88","messageId":"89","endLine":24,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":28,"column":13,"nodeType":"88","messageId":"89","endLine":28,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":85,"column":36,"nodeType":"92","messageId":"93","endLine":85,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":88,"column":35,"nodeType":"92","messageId":"93","endLine":88,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":154,"column":30,"nodeType":"92","messageId":"93","endLine":154,"endColumn":32},{"ruleId":"90","severity":1,"message":"91","line":217,"column":30,"nodeType":"92","messageId":"93","endLine":217,"endColumn":32},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]